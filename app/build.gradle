apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

description = 'This is project app module build.gradle.'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.jusenr.kotlindemo"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode project.properties["PROJ_VERSIONCODE"] as int
        versionName rootProject.getVersionName()
        manifestPlaceholders rootProject.ext.MANIFESTPLACEHOLDERS
        //Logcat日志TAG设置
        buildConfigField "String", "LOG_TAG", "\"${rootProject.ext.APP_LOG_TAG}\""
        buildConfigField "String", "BUILD_TIME", "\"${rootProject.releaseTime("yyyyMMdd HH:mm")}\""
        //默认服务器环境配置(生产环境)
        buildConfigField "boolean", "IS_INNER_TEST", "false"
        buildConfigField "int", "HOST_NOW", "1"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
                includeCompileClasspath false
            }
        }
        flavorDimensions "versionCode"
        project.archivesBaseName = "kotlindemo-$versionName"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        release {
            storeFile file(SIGN_FILEPATH)
            storePassword SIGN_STOREPASSWORD
            keyAlias SIGN_KEYALIAS
            keyPassword SIGN_KEYPASSWORD
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['src/main/assets']
            jni.srcDirs = ['src/main/cpp']
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    //产品渠道配置
    productFlavors {
        innerTest {
            applicationId "com.jusenr.kotlindemo.test"
            buildConfigField "boolean", "IS_INNER", "true"
            buildConfigField "int", "HOST_NOW", "2"
            versionName = "T" + rootProject.getVersionName()
        }

        dev {
            applicationId "com.jusenr.kotlindemo.dev"
            buildConfigField "boolean", "IS_INNER", "true"
            buildConfigField "int", "HOST_NOW", "3"
            versionName = "D" + rootProject.getVersionName()
        }

        online {
            versionName = "V" + rootProject.getVersionName()
        }

        huawei { versionName = "V" + defaultConfig.versionName }
        xiaomi { versionName = "V" + defaultConfig.versionName }

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:26.+'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:multidex:1.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    // Anko All
//    implementation "org.jetbrains.anko:anko:$anko_version"
    // Anko Commons
//    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    // Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"
    // sdk15, sdk19, sdk21, sdk23 are also available
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"

    // Coroutine listeners for Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"

    // Anko SQLite
//    implementation "org.jetbrains.anko:anko-sqlite:$anko_version"

    //ARouter
    compile "com.alibaba:arouter-api:$arouter_version"
    annotationProcessor "com.alibaba:arouter-compiler:$arouter_compiler_version"
}
kotlin {
    experimental {
        coroutines "warn"
    }
}
