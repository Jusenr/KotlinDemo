apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.jusenr.kotlindemo"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode project.properties["PROJ_VERSIONCODE"] as int
        versionName rootProject.getVersionName()
        manifestPlaceholders rootProject.ext.MANIFESTPLACEHOLDERS
        //Logcat日志TAG设置
        buildConfigField "String", "LOG_TAG", "\"${rootProject.ext.APP_LOG_TAG}\""
        //默认服务器环境配置(生产环境)
        buildConfigField "boolean", "IS_INNER", "false"
        buildConfigField "int", "HOST_NOW", "1"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        flavorDimensions "versionCode"
    }
    signingConfigs {
        release {
            storeFile file(SIGN_FILEPATH)
            storePassword SIGN_STOREPASSWORD
            keyAlias SIGN_KEYALIAS
            keyPassword SIGN_KEYPASSWORD
        }
    }
    buildTypes {
        release {
            //Show Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            //Show Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['src/main/assets']
            jni.srcDirs = ['src/main/cpp']
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    //产品渠道配置
    productFlavors {
        innerTest {
            buildConfigField "boolean", "IS_INNER", "true"
            buildConfigField "int", "HOST_NOW", "2"
            versionName = "T" + rootProject.getVersionName()
        }

        dev {
            buildConfigField "boolean", "IS_INNER", "true"
            buildConfigField "int", "HOST_NOW", "3"
            versionName = "D" + rootProject.getVersionName()
        }

        online {
            versionName = "V" + rootProject.getVersionName()
        }

        huawei { versionName = "V" + defaultConfig.versionName }
        xiaomi { versionName = "V" + defaultConfig.versionName }

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }
    //Apk包名自定义
//    applicationVariants.all {
//        variant ->
//            def apkFileName = rootProject.getVersionName()
//            def time = releaseTime("yyyyMMdd")
//            variant.outputs.each {
//                output ->
//                    def outputFile = output.outputFile
//                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        def fileName = outputFile.name.replace(".apk", "-${apkFileName}-${time}.apk")
//                        output.outputFile = new File(outputFile.absolutePath, fileName)
//                    }
//            }
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation 'com.android.support:appcompat-v7:26.+'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:multidex:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
}
//编译结束后删除unaligned包
//android.applicationVariants.all { variant ->
//    variant.assemble.doLast {
//        variant.outputs.each { output ->
//            println "aligned " + output.outputFile
//            println "unaligned " + output.packageApplication.outputFile
//            File file = output.packageApplication.outputFile
//            if (variant.buildType.zipAlignEnabled && file.getName().contains("unaligned")) {
//                println "deleting " + file.getName()
//                file.delete()
//            }
//        }
//    }
//}
